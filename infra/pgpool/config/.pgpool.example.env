# ═══════════════════════════════════════════════════════════════════
# Variáveis de Ambiente para o Serviço Pgpool-II
# ═══════════════════════════════════════════════════════════════════

# --- Configuração de Descoberta do Patroni ---
# Lista de todos os endpoints da API do Patroni, separados por espaços.
# O script tentará cada um deles em ordem até encontrar um que responda.
PATRONI_API_ENDPOINTS="http://patroni-postgres-1:8008 http://patroni-postgres-2:8008 http://patroni-postgres-3:8008"

# ═══════════════════════════════════════════════════════════════════

# --- Credenciais para Conexão aos Backends PostgreSQL ---
# Usuário e senha que o Pgpool-II usará para os health checks nos nós do PostgreSQL.
# Este usuário precisa de permissão de conexão (CONNECT) no PostgreSQL.
PGPOOL_HEALTHCHECK_USER=healthchecker
PGPOOL_HEALTHCHECK_PASSWORD=healthchecker_password

# Usuário para STREAMING REPLICATION CHECKS. Requer privilégios de REPLICATION.
# Frequentemente, este é o mesmo usuário que o Patroni usa para replicação.
PGPOOL_SR_CHECK_USER=replicator
PGPOOL_SR_CHECK_PASSWORD=replicator_password

# ═══════════════════════════════════════════════════════════════════

# --- Credenciais para o Protocolo de Controle do Pgpool (PCP) ---
# Usuário e senha para se conectar à interface de administração (porta 9898).
# Este usuário deve ser configurado no healthcheck do docker-compose.yml.
PGPOOL_PCP_USER=pcp_admin
PGPOOL_PCP_PASSWORD=pcp_admin_password

# ═══════════════════════════════════════════════════════════════════
# --- PARÂMETROS DE TUNING DE PERFORMANCE DO PGPOOL ---
# Ajustado para testes com e sem -C (connection pooling vs reconnect)
# 
# Cenário 1: SEM -C (connection pooling) - usa cache de conexões
#   - Conexões são reutilizadas entre transações
#   - MAX_POOL é crítico
#
# Cenário 2: COM -C (reconnect cada transação) - sem cache
#   - Nova conexão a cada transação
#   - NUM_INIT_CHILDREN é crítico (precisa de mais processos)
#   - MAX_POOL tem pouco impacto
# ═══════════════════════════════════════════════════════════════════

# Número de processos filhos do Pgpool
# Para suportar até 100 clientes simultâneos COM e SEM -C
# IMPORTANTE: Precisa de margem acima de 100 para health checks e overhead
# 150 processos = 100 clientes + 50 de margem (~50% de buffer)
# Com uso real de apenas ~400MB, 150 processos cabem confortavelmente nos 3GB
PGPOOL_NUM_INIT_CHILDREN=125

# Número máximo de conexões cacheadas por processo filho
# Total de conexões ao PostgreSQL = NUM_INIT_CHILDREN × MAX_POOL
# Com 150 × 4 = 600 conexões simultâneas ao PostgreSQL
# Margem para 100 clientes: 600 - 100 = 500 conexões livres (excelente!)
PGPOOL_MAX_POOL=2

# ═══════════════════════════════════════════════════════════════════
# --- Configurar variáveis de ambiente para arquivos de senha ---
# Nao alterar estes caminhos a menos que os arquivos de senha sejam movidos.
PGPASSFILE="/home/pgpool/.pgpass"
PCPPASSFILE="/home/pgpool/.pcppass"
