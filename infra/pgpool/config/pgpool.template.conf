# =============================================================================
# Arquivo de Template para pgpool.conf (Revisado e Aprimorado)
# Adaptado para um ambiente dinâmico.
# =============================================================================

# --- CONFIGURAÇÕES DE CONEXÃO E PCP ---
listen_addresses = '*'
port = 5432

# --- PCP (Pgpool Control Protocol) ---
pcp_listen_addresses = '*'
pcp_port = 9898

# Aponta os arquivos de runtime para o diretório efêmero padrão do Linux.
# O entrypoint.sh garante que este diretório seja criado e permissionado.
pid_file_name = '/var/run/pgpool/pgpool.pid'
socket_dir = '/var/run/pgpool'
pcp_socket_dir = '/var/run/pgpool'

# --- CONFIGURAÇÃO DOS BACKENDS (SERÁ PREENCHIDA DINAMICAMENTE) ---
##BACKEND_NODES_CONFIG##

# --- MODOS DE OPERAÇÃO E BALANCEAMENTO DE CARGA ---
backend_clustering_mode = 'streaming_replication'
load_balance_mode = on
master_slave_mode = on
master_slave_sub_mode = 'stream'
replication_mode = off
enable_pool_hba = off

# --- POOLING DE CONEXÃO E PERFORMANCE (TUNING) ---
# Número de processos filhos pré-forkados. Um valor maior permite mais conexões simultâneas.
num_init_children = ${PGPOOL_NUM_INIT_CHILDREN:-32}
# Máximo de conexões simultâneas permitidas.
max_pool = ${PGPOOL_MAX_POOL:-100}
connection_cache = on
child_life_time = 300
client_idle_limit = 3600
serialize_accept = off
allow_sql_comments = on
ignore_leading_white_space = on

# --- CHECAGEM DE REPLICAÇÃO (STREAMING REPLICATION CHECK) ---
sr_check_period = 10
sr_check_user = 'replicator'     # Usuário com permissões de replicação
sr_check_password = ''           # A senha virá do .pgpass (mais seguro)
sr_check_database = 'postgres'

# --- CHECAGEM DE SAÚDE (HEALTH CHECK) - COM TUNING ---
health_check_period = 30        # Aumentado de 5 para 30 segundos para reduzir sobrecarga
health_check_timeout = 20       # Aumentado de 10 para 20 segundos para maior tolerância
health_check_max_retries = 5    # Aumentado de 3 para 5 tentativas
health_check_retry_delay = 5    # Aumentado de 2 para 5 segundos entre tentativas
health_check_user = 'healthchecker' # Usuário dedicado com privilégios mínimos
health_check_password = ''       # A senha virá do .pgpass (mais seguro)
health_check_database = 'postgres'

pool_passwd = '/opt/pgpool/pool_passwd'

# --- FAILOVER E FAILBACK (AUTOMATIZADO VIA HOOKS) ---
failover_on_backend_error = on
fail_over_on_backend_shutdown = on
failover_command = '/opt/pgpool/bin/scripts/hooks/failover.sh %d %H %p %D %m %M %P %r %R'
follow_primary_command = '/opt/pgpool/bin/scripts/hooks/follow_primary.sh %d %H %p %D %m %M %P %r %R'
failback_command = '' # O failback deve ser um processo manual e controlado

# --- LOGGING (CONFIGURADO PARA CONTAINERS) ---
logging_collector = off       # Desligado para Docker
# log_directory = '/tmp/pgpool'
# log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log'
log_destination = 'stderr'       # Melhor prática para Docker
log_connections = off            # Desligado para não poluir os logs
log_statement = off              # Desligado para não poluir os logs
log_hostname = on
client_min_messages = warning
log_min_messages = warning